---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: peer
  namespace: org1
  labels:
    app: hyperledger-fabric
    component: peer
    release: 1.4.1
spec:
  selector:
    matchLabels:
      app: hyperledger-fabric
      component: peer
      release: 1.4.1
  serviceName: "org1"
  replicas: 1
  template:
    metadata:
      labels:
        app: hyperledger-fabric
        component: peer
        release: 1.4.1
    spec:
      initContainers:
      - name: init-peer
        image: hyperledger/fabric-ca:1.4.1
        command: ['sh', '-c']
        args:
        - |
          if [ ! -d /hyperledger/msp ]; then
            fabric-ca-client enroll -H /hyperledger -u http://${HOSTNAME}:peerpw@ca.org1:7054 --csr.names C=KR,ST=Seoul,L=Gangdong-gu,O=org1.com
            mkdir /hyperledger/msp/admincerts
            cp /var/admin/admin.pem /hyperledger/msp/admincerts/
          fi
        volumeMounts:
        - name: peer-data
          mountPath: /hyperledger
        - name: admin-cert
          mountPath: /var/admin
      containers:
      - name: peer
        image: hyperledger/fabric-peer:1.4.1
        command: ['sh', '-c']
        args: 
        - |
          export CORE_PEER_ID=${HOSTNAME};
          export CORE_PEER_ADDRESS=${HOSTNAME}:7051;
          export CORE_PEER_GOSSIP_EXTERNALENDPOINT=${HOSTNAME}:7051;
          peer node start
        env:
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: peer-0:7051
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /hyperledger/msp
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        ports:
        - name: interface
          containerPort: 7051
        - name: chaincode
          containerPort: 7052
        volumeMounts:
        - name: docker-sock
          mountPath: /host/var/docker.sock
        - name: peer-data
          mountPath: /hyperledger
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: admin-cert
        secret:
          secretName: admin
          items:
          - key: cert
            path: admin.pem
  volumeClaimTemplates:
  - metadata:
      name: peer-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local
      resources:
        requests:
          storage: 5Gi